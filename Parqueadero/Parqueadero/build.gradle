buildscript {
	ext {
		springBootVersion = '2.0.3.RELEASE'
	}
	repositories {
		mavenCentral()
		jcenter()
	}
	dependencies {
		classpath(
		"org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}",		
		'org.unbroken-dome.gradle-plugins:gradle-testsets-plugin:1.4.5'
		)
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'
apply plugin: 'org.unbroken-dome.test-sets'


group = 'com.ceiba'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8


repositories {
	mavenCentral()
}

testSets {
     integrationTest { dirName = 'integration-test' }
}


dependencies {
	compile files('WEB-INF/lib/Superfinanciera.jar')
	compile('org.springframework.boot:spring-boot-starter')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('com.fasterxml.jackson.core:jackson-core')
	compile('com.fasterxml.jackson.core:jackson-annotations')
	compile('com.fasterxml.jackson.core:jackson-databind')
	compile("org.springframework:spring-webmvc")
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.seleniumhq.selenium:selenium-java')
	compile('org.seleniumhq.selenium:selenium-support')
	
	runtime('org.springframework.boot:spring-boot-devtools')
	runtime('com.h2database:h2')
	
	
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.mockito:mockito-core:2.19.0')
	
	integrationTestCompile('org.assertj:assertj-core:3.0.0')
	
	
}


def webappDir = "$projectDir/src/main/angular4-client"
sourceSets {
	main {
		resources {
			srcDirs = ["$webappDir/dist", "$projectDir/src/main/resources"]
		}
	}
}
processResources {
	dependsOn "buildAngular"
}

task buildAngular(type:Exec) {
	// installAngular should be run prior to this task
	dependsOn "installAngular"
	workingDir "$webappDir"
	inputs.dir "$webappDir"
	// Add task to the standard build group
	group = BasePlugin.BUILD_GROUP
	// ng doesn't exist as a file in windows -> ng.cmd
	if (System.getProperty("os.name").toUpperCase().contains("WINDOWS")){
		commandLine "ng.cmd", "build"
	} else {
		commandLine "ng", "build"
	}
}
 
task installAngular(type:Exec) {
	workingDir "$webappDir"
	inputs.dir "$webappDir"
	group = BasePlugin.BUILD_GROUP
	if (System.getProperty("os.name").toUpperCase().contains("WINDOWS")){
		commandLine "npm.cmd", "install"
	} else {
		commandLine "npm", "install"
	}
}

jar { 
	manifest {
		attributes 'Implementation-Title': 'project',
				   'Implementation-Version': version
	}
}


test{
	jacoco{
		append = false
		destinationFile = file("jacoco/jacocoTest.exec")
	}
	reports.junitXml.destination = file("jacoco/test-results")
}

jacocoTestReport.dependsOn(test)

check.dependsOn integrationTest
integrationTest.mustRunAfter test
